
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
_USED			EQU	1

	INCLUDE	"C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.INC"


; Define statements.
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00033	    DEFINE OSC 20 ' use 20 MHZ oscillator
#define		OSC		 20 

RAM_START       		EQU	00020h
RAM_END         		EQU	0014Fh
RAM_BANKS       		EQU	00003h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00120h
BANK2_END       		EQU	0014Fh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	0217Fh

; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.RAM	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00093	A00038	    Delay        var Word    ' Variable for Delay loop
_Delay           		EQU	RAM_START + 018h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00094	A0003A	    OverFlowVar  var Word	 '
_OverFlowVar     		EQU	RAM_START + 01Ah
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00098	A0003C	    RPM           var Word
_RPM             		EQU	RAM_START + 01Ch
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00001	A0003E	    ' Pulse counter 
T1              		EQU	RAM_START + 01Eh
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00090	A00040	    ToBeDisplay	 var Word    ' Result of count to be send to 7 segment display
_ToBeDisplay     		EQU	RAM_START + 020h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00095	A00042	    Dentes       Var Byte
_Dentes          		EQU	RAM_START + 022h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00086	A00043	    Digit_1	     var Byte    ' Hundreds digit
_Digit_1         		EQU	RAM_START + 023h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00087	A00044	    Digit_2	     var Byte    ' Tenth digit
_Digit_2         		EQU	RAM_START + 024h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00088	A00045	    Digit_3	     var Byte    ' Unit digit
_Digit_3         		EQU	RAM_START + 025h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00089	A00046	    Digit_4	     var Byte    ' Unit digit    
_Digit_4         		EQU	RAM_START + 026h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00091	A00047	    Display      var Byte    ' Temp variable
_Display         		EQU	RAM_START + 027h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00092	A00048	    DisplayLoop  var Byte    ' 
_DisplayLoop     		EQU	RAM_START + 028h
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00001	A00049	    ' Pulse counter 
PB01            		EQU	RAM_START + 029h
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00020	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00021	PORTH   VAR     PORTA
_PORTH           		EQU	 PORTA
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00022	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00023	TRISH   VAR     TRISA
_TRISH           		EQU	 TRISA
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00081	    DisplayPort  var PORTB   ' Port for 7 Segments     
_DisplayPort     		EQU	 PORTB
#define _Thousands       	 PB01, 000h
#define _INTCON??2       	 INTCON, 002h

; EEPROM data.
	ORG EEPROM_START

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00063	    data @0,63,6,91,79,102,109,125,7,127,111
	ORG EEPROM_START + 00000h
	DE	03Fh
	DE	006h
	DE	05Bh
	DE	04Fh
	DE	066h
	DE	06Dh
	DE	07Dh
	DE	007h
	DE	07Fh
	DE	06Fh

	INCLUDE	"SPINDLER_LED_DIG4_FUNCIONANDO_1.MAC"
	INCLUDE	"C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\PBPPIC14.LIB"


; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00012	BANK0   $0020, $007F
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00013	BANK1   $00A0, $00EF
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00014	BANK2   $0120, $014F
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00015	EEPROM  $2100, $217F
; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00016	LIBRARY "PBPPIC14"

; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00018	        include "PIC14EXT.BAS"

; C:\PROGRA~2\MECANI~1\MCS4~1\PBP260\16F628A.BAS	00025	        include "PBPPIC14.RAM"
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00033	    DEFINE OSC 20 ' use 20 MHZ oscillator

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00039	    TRISA = %010000 ' PORTA  : <2:0> outputs to common Anode of 7 segment 
	MOVE?CB	010h, TRISA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00044	    TRISB = 0         ' PORTB connected to 7 segments
	MOVE?CB	000h, TRISB
; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00063	    data @0,63,6,91,79,102,109,125,7,127,111

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00068	    OPTION_REG = %1111000   ' TMR0 clock source : RA4/T0CKI
	MOVE?CB	078h, OPTION_REG

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00073	    INTCON = %10100000      ' Enable global interrupt
	MOVE?CB	0A0h, INTCON

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00103	    pause 500       ' Aguarda o PIC estabilizar
	PAUSE?C	001F4h

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00104	    tobedisplay = 0 ' set initial value of count
	MOVE?CW	000h, _ToBeDisplay

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00105	    TMR0 = 0        ' reset prescaller 
	MOVE?CB	000h, TMR0

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00106	    On Interrupt GoTo SetVarToBeDisplay
	ONINT?LL	_SetVarToBeDisplay, L00001

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00108	MainLoop:

	LABEL?L	_MainLoop	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00124	DisplayRefresh:

	LABEL?L	_DisplayRefresh	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00158	    Dentes = 4
	ICALL?L	L00001
	MOVE?CB	004h, _Dentes

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00159	    RPM = ((ToBeDisplay/(Dentes/2)) * 60)
	ICALL?L	L00001
	DIV?BCW	_Dentes, 002h, T1
	DIV?WWW	_ToBeDisplay, T1, T1
	MUL?WCW	T1, 03Ch, _RPM

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00161	    If RPM >=10000 Then
	ICALL?L	L00001
	CMPLT?WCL	_RPM, 02710h, L00002

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00162	       RPM = RPM /10
	ICALL?L	L00001
	DIV?WCW	_RPM, 00Ah, _RPM

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00163	       Thousands = 1
	ICALL?L	L00001
	MOVE?CT	001h, _Thousands

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00164	    Else
	ICALL?L	L00001
	GOTO?L	L00003
	LABEL?L	L00002	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00165	       Thousands = 0   
	ICALL?L	L00001
	MOVE?CT	000h, _Thousands

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00166	    EndIf    
	ICALL?L	L00001
	LABEL?L	L00003	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00176	    display = RPM Dig 3        ' Read hundreds digit
	ICALL?L	L00001
	DIG?WCB	_RPM, 003h, _Display

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00177	    read display,digit_1      ' Convert hundreds
	ICALL?L	L00001
	READADDRESS?B	_Display
	READ?B	_Digit_1

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00180	    If thousands == 0 Then digit_1=digit_1 ^/ $7F   'CC Diminui 128
	ICALL?L	L00001
	CMPNE?TCL	_Thousands, 000h, L00004
	NXOR?BCB	_Digit_1, 07Fh, _Digit_1
	LABEL?L	L00004	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00182	    display = RPM Dig 2        ' Read hundreds digit
	ICALL?L	L00001
	DIG?WCB	_RPM, 002h, _Display

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00183	    read display,digit_2       ' Convert hundreds
	ICALL?L	L00001
	READADDRESS?B	_Display
	READ?B	_Digit_2

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00184	    If RPM>9999 Then
	ICALL?L	L00001
	CMPLE?WCL	_RPM, 0270Fh, L00006

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00185	       digit_2 = digit_2 + 128
	ICALL?L	L00001
	ADD?BCB	_Digit_2, 080h, _Digit_2

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00186	    EndIf   
	ICALL?L	L00001
	LABEL?L	L00006	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00189	    If Thousands == 1 Then digit_2=digit_2 ^/ $7F  'CC
	ICALL?L	L00001
	CMPNE?TCL	_Thousands, 001h, L00008
	NXOR?BCB	_Digit_2, 07Fh, _Digit_2
	LABEL?L	L00008	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00191	    display = RPM Dig 1        ' Read tenths digit
	ICALL?L	L00001
	DIG?WCB	_RPM, 001h, _Display

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00192	    read display,digit_3      ' Convert tenths
	ICALL?L	L00001
	READADDRESS?B	_Display
	READ?B	_Digit_3

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00196	    display = RPM Dig 0        ' Read units digit
	ICALL?L	L00001
	DIG?WCB	_RPM, 000h, _Display

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00197	    read display,digit_4      ' Convert units
	ICALL?L	L00001
	READADDRESS?B	_Display
	READ?B	_Digit_4

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00202	    For displayloop = 0 To 83 ' loop for about 1 sec
	ICALL?L	L00001
	MOVE?CB	000h, _DisplayLoop
	LABEL?L	L00010	
	CMPGT?BCL	_DisplayLoop, 053h, L00011

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00206	        If RPM >= 1000 Then ' turn display on only in case upper digits are not equal to 0
	ICALL?L	L00001
	CMPLT?WCL	_RPM, 003E8h, L00012

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00209	           PORTA = %1111
	ICALL?L	L00001
	MOVE?CB	00Fh, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00210	           displayport=digit_1  ' display    5
	ICALL?L	L00001
	MOVE?BB	_Digit_1, _DisplayPort

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00212	           PORTA = %1110
	ICALL?L	L00001
	MOVE?CB	00Eh, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00214	        EndIf           
	ICALL?L	L00001
	LABEL?L	L00012	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00215	        GoSub DelayBetweenEachDigit
	ICALL?L	L00001
	GOSUB?L	_DelayBetweenEachDigit

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00219	        If RPM >= 100 Then ' turn display on only in case upper digits are not equal to 0
	ICALL?L	L00001
	CMPLT?WCL	_RPM, 064h, L00014

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00222	           PORTA = %1111
	ICALL?L	L00001
	MOVE?CB	00Fh, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00223	           displayport=digit_2  ' display     3
	ICALL?L	L00001
	MOVE?BB	_Digit_2, _DisplayPort

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00224	           PORTA = %1101
	ICALL?L	L00001
	MOVE?CB	00Dh, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00225	        EndIf      
	ICALL?L	L00001
	LABEL?L	L00014	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00226	        GoSub DelayBetweenEachDigit
	ICALL?L	L00001
	GOSUB?L	_DelayBetweenEachDigit

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00228	        If RPM >= 10 Then
	ICALL?L	L00001
	CMPLT?WCL	_RPM, 00Ah, L00016

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00230	           PORTA = %1111       
	ICALL?L	L00001
	MOVE?CB	00Fh, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00231	           displayport=digit_3 ' display  4
	ICALL?L	L00001
	MOVE?BB	_Digit_3, _DisplayPort

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00232	           PORTA = %1011
	ICALL?L	L00001
	MOVE?CB	00Bh, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00233	        EndIf
	ICALL?L	L00001
	LABEL?L	L00016	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00234	        GoSub DelayBetweenEachDigit
	ICALL?L	L00001
	GOSUB?L	_DelayBetweenEachDigit

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00237	        PORTA = %1111       
	ICALL?L	L00001
	MOVE?CB	00Fh, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00238	        displayport=digit_4 ' display  4
	ICALL?L	L00001
	MOVE?BB	_Digit_4, _DisplayPort

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00239	        PORTA = %0111
	ICALL?L	L00001
	MOVE?CB	007h, PORTA

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00241	        GoSub DelayBetweenEachDigit
	ICALL?L	L00001
	GOSUB?L	_DelayBetweenEachDigit

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00244	    Next
	ICALL?L	L00001
	NEXT?BCL	_DisplayLoop, 001h, L00010
	LABEL?L	L00011	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00246	    tobedisplay = OverFlowVar + TMR0
	ICALL?L	L00001
	ADD?WBW	_OverFlowVar, TMR0, _ToBeDisplay

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00247	    OverFlowVar = 0 ' Reset OverFlowVar
	ICALL?L	L00001
	MOVE?CW	000h, _OverFlowVar

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00248	    TMR0 = 0        ' reset prescaller
	ICALL?L	L00001
	MOVE?CB	000h, TMR0

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00249	    GoTo DisplayRefresh
	ICALL?L	L00001
	GOTO?L	_DisplayRefresh

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00252	DelayBetweenEachDigit:

	LABEL?L	_DelayBetweenEachDigit	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00260		For delay=1 To 307
	ICALL?L	L00001
	MOVE?CW	001h, _Delay
	LABEL?L	L00018	
	CMPGT?WCL	_Delay, 00133h, L00019

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00261		    @ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00262		Next
	ICALL?L	L00001
	NEXT?WCL	_Delay, 001h, L00018
	LABEL?L	L00019	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00263		@ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00264		@ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00265		@ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00266		@ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00267		@ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00268		@ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00269		@ Nop

	ASM?
 Nop

	ENDASM?


; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00270	    Return
	ICALL?L	L00001
	RETURN?	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00273	Disable
	DISABLE?	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00274	SetVarToBeDisplay:

	LABEL?L	_SetVarToBeDisplay	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00283	    OverFlowVar = OverFlowVar + 256 
	ADD?WCW	_OverFlowVar, 00100h, _OverFlowVar

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00284	    INTCON.2 = 0 ' clear overflow flag
	MOVE?CT	000h, _INTCON??2

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00285	    TMR0 = 0     ' reload TMR0
	MOVE?CB	000h, TMR0

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00286	Resume
	RESUME?	

; D:\ELETRONICA\SPINDLER_LED_DIG4_FUNCIONANDO_1.PBC	00287	Enable    
	ENABLE?	

	END
